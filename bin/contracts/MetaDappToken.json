{
    "contractName": "MetaDappToken",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/lscofield/Documents/Projects/Cursos/Metadapp/walldapp/contracts/MetaDappToken.sol\":\"MetaDappToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lscofield/Documents/Projects/Cursos/Metadapp/walldapp/contracts/MetaDappToken.sol\":{\"keccak256\":\"0x57b6bd6afa452b91e5d1c4851590334669af229369ceba985f02ec226409d716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6733d9c663074a08e8caea245211a80e0faebc7e941a80a8791e1ae5c6ba64d\",\"dweb:/ipfs/QmPPh3EkzT9nwXBsaER2qvYCqxXdAeVCPPH318j2NbXMDN\"]},\"/Users/lscofield/Documents/Projects/Cursos/Metadapp/walldapp/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"/Users/lscofield/Documents/Projects/Cursos/Metadapp/walldapp/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"/Users/lscofield/Documents/Projects/Cursos/Metadapp/walldapp/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"/Users/lscofield/Documents/Projects/Cursos/Metadapp/walldapp/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b506040518060400160405280600e81526020016d26b2ba30a230b838102a37b5b2b760911b815250604051806040016040528060038152602001624d444160e81b81525081600390805190602001906200006d9291906200018f565b508051620000839060049060208401906200018f565b505050620000a23369d3c21bcecceda1000000620000a860201b60201c565b620002d7565b6001600160a01b038216620000da5760405162461bcd60e51b8152600401620000d19062000235565b60405180910390fd5b620000e8600083836200018a565b8060026000828254620000fc919062000275565b90915550506001600160a01b038216600090815260208190526040812080548392906200012b90849062000275565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001709085906200026c565b60405180910390a362000186600083836200018a565b5050565b505050565b8280546200019d906200029a565b90600052602060002090601f016020900481019282620001c157600085556200020c565b82601f10620001dc57805160ff19168380011785556200020c565b828001600101855582156200020c579182015b828111156200020c578251825591602001919060010190620001ef565b506200021a9291506200021e565b5090565b5b808211156200021a57600081556001016200021f565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200029557634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680620002af57607f821691505b60208210811415620002d157634e487b7160e01b600052602260045260246000fd5b50919050565b610b1b80620002e76000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806342966c681161007157806342966c681461014757806370a082311461015c57806395d89b411461016f578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100f757806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101b0565b6040516100ce91906107a8565b60405180910390f35b6100ea6100e536600461075c565b610242565b6040516100ce919061079d565b6100ff610264565b6040516100ce9190610a4e565b6100ea61011a366004610721565b61026a565b610127610298565b6040516100ce9190610a57565b6100ea61014236600461075c565b61029d565b61015a610155366004610785565b6102c9565b005b6100ff61016a3660046106ce565b6102dd565b6100c16102fc565b6100ea61018536600461075c565b61030b565b6100ea61019836600461075c565b61035c565b6100ff6101ab3660046106ef565b610374565b6060600380546101bf90610a94565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb90610a94565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b60008061024d61039f565b905061025a8185856103a3565b5060019392505050565b60025490565b60008061027561039f565b9050610282858285610457565b61028d8585856104a1565b506001949350505050565b601290565b6000806102a861039f565b905061025a8185856102ba8589610374565b6102c49190610a65565b6103a3565b6102da6102d461039f565b826105c5565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf90610a94565b60008061031661039f565b905060006103248286610374565b90508381101561034f5760405162461bcd60e51b815260040161034690610a09565b60405180910390fd5b61028d82868684036103a3565b60008061036761039f565b905061025a8185856104a1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103c95760405162461bcd60e51b8152600401610346906109c5565b6001600160a01b0382166103ef5760405162461bcd60e51b815260040161034690610880565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061044a908590610a4e565b60405180910390a3505050565b60006104638484610374565b9050600019811461049b578181101561048e5760405162461bcd60e51b8152600401610346906108c2565b61049b84848484036103a3565b50505050565b6001600160a01b0383166104c75760405162461bcd60e51b815260040161034690610980565b6001600160a01b0382166104ed5760405162461bcd60e51b8152600401610346906107fb565b6104f88383836106b2565b6001600160a01b038316600090815260208190526040902054818110156105315760405162461bcd60e51b8152600401610346906108f9565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610568908490610a65565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105b29190610a4e565b60405180910390a361049b8484846106b2565b6001600160a01b0382166105eb5760405162461bcd60e51b81526004016103469061093f565b6105f7826000836106b2565b6001600160a01b038216600090815260208190526040902054818110156106305760405162461bcd60e51b81526004016103469061083e565b6001600160a01b038316600090815260208190526040812083830390556002805484929061065f908490610a7d565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106a2908690610a4e565b60405180910390a36106b2836000845b505050565b80356001600160a01b03811681146102f757600080fd5b6000602082840312156106df578081fd5b6106e8826106b7565b9392505050565b60008060408385031215610701578081fd5b61070a836106b7565b9150610718602084016106b7565b90509250929050565b600080600060608486031215610735578081fd5b61073e846106b7565b925061074c602085016106b7565b9150604084013590509250925092565b6000806040838503121561076e578182fd5b610777836106b7565b946020939093013593505050565b600060208284031215610796578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156107d4578581018301518582016040015282016107b8565b818111156107e55783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610a7857610a78610acf565b500190565b600082821015610a8f57610a8f610acf565b500390565b600281046001821680610aa857607f821691505b60208210811415610ac957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212206a22c04dd2354ca2d6d1252fdcde94f02b6f73d5628e52c20249b9645942a07764736f6c63430008000033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806342966c681161007157806342966c681461014757806370a082311461015c57806395d89b411461016f578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100f757806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101b0565b6040516100ce91906107a8565b60405180910390f35b6100ea6100e536600461075c565b610242565b6040516100ce919061079d565b6100ff610264565b6040516100ce9190610a4e565b6100ea61011a366004610721565b61026a565b610127610298565b6040516100ce9190610a57565b6100ea61014236600461075c565b61029d565b61015a610155366004610785565b6102c9565b005b6100ff61016a3660046106ce565b6102dd565b6100c16102fc565b6100ea61018536600461075c565b61030b565b6100ea61019836600461075c565b61035c565b6100ff6101ab3660046106ef565b610374565b6060600380546101bf90610a94565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb90610a94565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b60008061024d61039f565b905061025a8185856103a3565b5060019392505050565b60025490565b60008061027561039f565b9050610282858285610457565b61028d8585856104a1565b506001949350505050565b601290565b6000806102a861039f565b905061025a8185856102ba8589610374565b6102c49190610a65565b6103a3565b6102da6102d461039f565b826105c5565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf90610a94565b60008061031661039f565b905060006103248286610374565b90508381101561034f5760405162461bcd60e51b815260040161034690610a09565b60405180910390fd5b61028d82868684036103a3565b60008061036761039f565b905061025a8185856104a1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103c95760405162461bcd60e51b8152600401610346906109c5565b6001600160a01b0382166103ef5760405162461bcd60e51b815260040161034690610880565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061044a908590610a4e565b60405180910390a3505050565b60006104638484610374565b9050600019811461049b578181101561048e5760405162461bcd60e51b8152600401610346906108c2565b61049b84848484036103a3565b50505050565b6001600160a01b0383166104c75760405162461bcd60e51b815260040161034690610980565b6001600160a01b0382166104ed5760405162461bcd60e51b8152600401610346906107fb565b6104f88383836106b2565b6001600160a01b038316600090815260208190526040902054818110156105315760405162461bcd60e51b8152600401610346906108f9565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610568908490610a65565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105b29190610a4e565b60405180910390a361049b8484846106b2565b6001600160a01b0382166105eb5760405162461bcd60e51b81526004016103469061093f565b6105f7826000836106b2565b6001600160a01b038216600090815260208190526040902054818110156106305760405162461bcd60e51b81526004016103469061083e565b6001600160a01b038316600090815260208190526040812083830390556002805484929061065f908490610a7d565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106a2908690610a4e565b60405180910390a36106b2836000845b505050565b80356001600160a01b03811681146102f757600080fd5b6000602082840312156106df578081fd5b6106e8826106b7565b9392505050565b60008060408385031215610701578081fd5b61070a836106b7565b9150610718602084016106b7565b90509250929050565b600080600060608486031215610735578081fd5b61073e846106b7565b925061074c602085016106b7565b9150604084013590509250925092565b6000806040838503121561076e578182fd5b610777836106b7565b946020939093013593505050565b600060208284031215610796578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156107d4578581018301518582016040015282016107b8565b818111156107e55783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610a7857610a78610acf565b500190565b600082821015610a8f57610a8f610acf565b500390565b600281046001821680610aa857607f821691505b60208210811415610ac957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212206a22c04dd2354ca2d6d1252fdcde94f02b6f73d5628e52c20249b9645942a07764736f6c63430008000033",
    "sourceMap": "188:223:0:-:0;;;226:96;;;;;;;;;;1978:113:1;;;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2067:17:1;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;280:35:0::1;286:10;298:16;280:5;;;:35;;:::i;:::-;188:223:::0;;8411:389:1;-1:-1:-1;;;;;8494:21:1;;8486:65;;;;-1:-1:-1;;;8486:65:1;;;;;;;:::i;:::-;;;;;;;;;8562:49;8591:1;8595:7;8604:6;8562:20;:49::i;:::-;8638:6;8622:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8654:18:1;;:9;:18;;;;;;;;;;:28;;8676:6;;8654:9;:28;;8676:6;;8654:28;:::i;:::-;;;;-1:-1:-1;;8697:37:1;;-1:-1:-1;;;;;8697:37:1;;;8714:1;;8697:37;;;;8727:6;;8697:37;:::i;:::-;;;;;;;;8745:48;8773:1;8777:7;8786:6;8745:19;:48::i;:::-;8411:389;;:::o;11795:121::-;;;;:::o;188:223:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;188:223:0;;;-1:-1:-1;188:223:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:355:5;216:2;198:21;;;255:2;235:18;;;228:30;294:33;289:2;274:18;;267:61;360:2;345:18;;188:181::o;374:177::-;520:25;;;508:2;493:18;;475:76::o;556:229::-;;627:1;623:6;620:1;617:13;614:2;;;-1:-1:-1;;;653:33:5;;709:4;706:1;699:15;739:4;660:3;727:17;614:2;-1:-1:-1;770:9:5;;604:181::o;790:380::-;875:1;865:12;;922:1;912:12;;;933:2;;987:4;979:6;975:17;965:27;;933:2;1040;1032:6;1029:14;1009:18;1006:38;1003:2;;;1086:10;1081:3;1077:20;1074:1;1067:31;1121:4;1118:1;1111:15;1149:4;1146:1;1139:15;1003:2;;845:325;;;:::o;:::-;188:223:0;;;;;;",
    "deployedSourceMap": "188:223:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3244:106::-;;;:::i;:::-;;;;;;;:::i;5192:286::-;;;;;;:::i;:::-;;:::i;3093:91::-;;;:::i;:::-;;;;;;;:::i;5873:234::-;;;;;;:::i;:::-;;:::i;328:81:0:-;;;;;;:::i;:::-;;:::i;:::-;;3408:125:1;;;;;;:::i;:::-;;:::i;2367:102::-;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:1;;4433:197;-1:-1:-1;;;4433:197:1:o;3244:106::-;3331:12;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:1;;5192:286;-1:-1:-1;;;;5192:286:1:o;3093:91::-;3175:2;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;328:81:0:-;375:27;381:12;:10;:12::i;:::-;395:6;375:5;:27::i;:::-;328:81;:::o;3408:125:1:-;-1:-1:-1;;;;;3508:18:1;;3482:7;3508:18;;;;;;;;;;;3408:125;;;;:::o;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:1;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;640:96:4:-;719:10;640:96;:::o;10119:370:1:-;-1:-1:-1;;;;;10250:19:1;;10242:68;;;;-1:-1:-1;;;10242:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10328:21:1;;10320:68;;;;-1:-1:-1;;;10320:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10399:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10450:32;;;;;10429:6;;10450:32;:::i;:::-;;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:1;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:1;;;;;;;:::i;:::-;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10770:441;;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:1;;7602:68;;;;-1:-1:-1;;;7602:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7688:16:1;;7680:64;;;;-1:-1:-1;;;7680:64:1;;;;;;;:::i;:::-;7755:38;7776:4;7782:2;7786:6;7755:20;:38::i;:::-;-1:-1:-1;;;;;7826:15:1;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7957:15:1;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:1;8063:4;-1:-1:-1;;;;;8054:26:1;;8073:6;8054:26;;;;;;:::i;:::-;;;;;;;;8091:37;8111:4;8117:2;8121:6;8091:19;:37::i;9120:576::-;-1:-1:-1;;;;;9203:21:1;;9195:67;;;;-1:-1:-1;;;9195:67:1;;;;;;;:::i;:::-;9273:49;9294:7;9311:1;9315:6;9273:20;:49::i;:::-;-1:-1:-1;;;;;9358:18:1;;9333:22;9358:18;;;;;;;;;;;9394:24;;;;9386:71;;;;-1:-1:-1;;;9386:71:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9491:18:1;;:9;:18;;;;;;;;;;9512:23;;;9491:44;;9555:12;:22;;9529:6;;9491:9;9555:22;;9529:6;;9555:22;:::i;:::-;;;;-1:-1:-1;;9593:37:1;;9619:1;;-1:-1:-1;;;;;9593:37:1;;;;;;;9623:6;;9593:37;:::i;:::-;;;;;;;;9641:48;9661:7;9678:1;9682:6;9641:48;9120:576;;;:::o;14:175:5:-;84:20;;-1:-1:-1;;;;;133:31:5;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:5:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:5:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:5;;1364:120;-1:-1:-1;1364:120:5:o;1489:187::-;1654:14;;1647:22;1629:41;;1617:2;1602:18;;1584:92::o;1681:603::-;;1822:2;1851;1840:9;1833:21;1883:6;1877:13;1926:6;1921:2;1910:9;1906:18;1899:34;1951:4;1964:140;1978:6;1975:1;1972:13;1964:140;;;2073:14;;;2069:23;;2063:30;2039:17;;;2058:2;2035:26;2028:66;1993:10;;1964:140;;;2122:6;2119:1;2116:13;2113:2;;;2192:4;2187:2;2178:6;2167:9;2163:22;2159:31;2152:45;2113:2;-1:-1:-1;2268:2:5;2247:15;-1:-1:-1;;2243:29:5;2228:45;;;;2275:2;2224:54;;1802:482;-1:-1:-1;;;1802:482:5:o;2289:399::-;2491:2;2473:21;;;2530:2;2510:18;;;2503:30;2569:34;2564:2;2549:18;;2542:62;-1:-1:-1;;;2635:2:5;2620:18;;2613:33;2678:3;2663:19;;2463:225::o;2693:398::-;2895:2;2877:21;;;2934:2;2914:18;;;2907:30;2973:34;2968:2;2953:18;;2946:62;-1:-1:-1;;;3039:2:5;3024:18;;3017:32;3081:3;3066:19;;2867:224::o;3096:398::-;3298:2;3280:21;;;3337:2;3317:18;;;3310:30;3376:34;3371:2;3356:18;;3349:62;-1:-1:-1;;;3442:2:5;3427:18;;3420:32;3484:3;3469:19;;3270:224::o;3499:353::-;3701:2;3683:21;;;3740:2;3720:18;;;3713:30;3779:31;3774:2;3759:18;;3752:59;3843:2;3828:18;;3673:179::o;3857:402::-;4059:2;4041:21;;;4098:2;4078:18;;;4071:30;4137:34;4132:2;4117:18;;4110:62;-1:-1:-1;;;4203:2:5;4188:18;;4181:36;4249:3;4234:19;;4031:228::o;4264:397::-;4466:2;4448:21;;;4505:2;4485:18;;;4478:30;4544:34;4539:2;4524:18;;4517:62;-1:-1:-1;;;4610:2:5;4595:18;;4588:31;4651:3;4636:19;;4438:223::o;4666:401::-;4868:2;4850:21;;;4907:2;4887:18;;;4880:30;4946:34;4941:2;4926:18;;4919:62;-1:-1:-1;;;5012:2:5;4997:18;;4990:35;5057:3;5042:19;;4840:227::o;5072:400::-;5274:2;5256:21;;;5313:2;5293:18;;;5286:30;5352:34;5347:2;5332:18;;5325:62;-1:-1:-1;;;5418:2:5;5403:18;;5396:34;5462:3;5447:19;;5246:226::o;5477:401::-;5679:2;5661:21;;;5718:2;5698:18;;;5691:30;5757:34;5752:2;5737:18;;5730:62;-1:-1:-1;;;5823:2:5;5808:18;;5801:35;5868:3;5853:19;;5651:227::o;5883:177::-;6029:25;;;6017:2;6002:18;;5984:76::o;6065:184::-;6237:4;6225:17;;;;6207:36;;6195:2;6180:18;;6162:87::o;6254:128::-;;6325:1;6321:6;6318:1;6315:13;6312:2;;;6331:18;;:::i;:::-;-1:-1:-1;6367:9:5;;6302:80::o;6387:125::-;;6455:1;6452;6449:8;6446:2;;;6460:18;;:::i;:::-;-1:-1:-1;6497:9:5;;6436:76::o;6517:380::-;6602:1;6592:12;;6649:1;6639:12;;;6660:2;;6714:4;6706:6;6702:17;6692:27;;6660:2;6767;6759:6;6756:14;6736:18;6733:38;6730:2;;;6813:10;6808:3;6804:20;6801:1;6794:31;6848:4;6845:1;6838:15;6876:4;6873:1;6866:15;6730:2;;6572:325;;;:::o;6902:127::-;6963:10;6958:3;6954:20;6951:1;6944:31;6994:4;6991:1;6984:15;7018:4;7015:1;7008:15",
    "sourcePath": "/Users/lscofield/Documents/Projects/Cursos/Metadapp/walldapp/contracts/MetaDappToken.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "/Users/lscofield/Documents/Projects/Cursos/Metadapp/walldapp/contracts/MetaDappToken.sol",
        "exportedSymbols": {
            "Context": [
                746
            ],
            "ERC20": [
                621
            ],
            "IERC20": [
                699
            ],
            "IERC20Metadata": [
                724
            ],
            "MetaDappToken": [
                35
            ]
        },
        "id": 36,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:0"
            },
            {
                "absolutePath": "/Users/lscofield/Documents/Projects/Cursos/Metadapp/walldapp/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "/Users/lscofield/Documents/Projects/Cursos/Metadapp/walldapp/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 36,
                "sourceUnit": 622,
                "src": "57:129:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 3,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 621,
                            "src": "214:5:0"
                        },
                        "id": 4,
                        "nodeType": "InheritanceSpecifier",
                        "src": "214:5:0"
                    }
                ],
                "contractDependencies": [
                    621,
                    699,
                    724,
                    746
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 35,
                "linearizedBaseContracts": [
                    35,
                    621,
                    724,
                    699,
                    746
                ],
                "name": "MetaDappToken",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 21,
                            "nodeType": "Block",
                            "src": "270:52:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 12,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "286:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 13,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "286:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000000000"
                                                },
                                                "id": 18,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "hexValue": "31303030303030",
                                                    "id": 14,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "298:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1000000_by_1",
                                                        "typeString": "int_const 1000000"
                                                    },
                                                    "value": "1000000"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                        "typeString": "int_const 1000000000000000000"
                                                    },
                                                    "id": 17,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "hexValue": "3130",
                                                        "id": 15,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "308:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "**",
                                                    "rightExpression": {
                                                        "hexValue": "3138",
                                                        "id": 16,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "312:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_18_by_1",
                                                            "typeString": "int_const 18"
                                                        },
                                                        "value": "18"
                                                    },
                                                    "src": "308:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                        "typeString": "int_const 1000000000000000000"
                                                    }
                                                },
                                                "src": "298:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000000000"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000000000"
                                                }
                                            ],
                                            "id": 11,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 438,
                                            "src": "280:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 19,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "280:35:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 20,
                                    "nodeType": "ExpressionStatement",
                                    "src": "280:35:0"
                                }
                            ]
                        },
                        "id": 22,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4d6574614461707020546f6b656e",
                                        "id": 7,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "246:16:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_46b598c04ce9682bf1e0fd309a3a52b17579610117ed9bcf224d7e51b13c3cc1",
                                            "typeString": "literal_string \"MetaDapp Token\""
                                        },
                                        "value": "MetaDapp Token"
                                    },
                                    {
                                        "hexValue": "4d4441",
                                        "id": 8,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "264:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_d2be3c3662551897d14fb2c5b2b93ee62e507b7ce1e94c9019cfcb3506032f61",
                                            "typeString": "literal_string \"MDA\""
                                        },
                                        "value": "MDA"
                                    }
                                ],
                                "id": 9,
                                "modifierName": {
                                    "id": 6,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 621,
                                    "src": "240:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "240:30:0"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 5,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "237:2:0"
                        },
                        "returnParameters": {
                            "id": 10,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "270:0:0"
                        },
                        "scope": 35,
                        "src": "226:96:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 33,
                            "nodeType": "Block",
                            "src": "365:44:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 28,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 736,
                                                    "src": "381:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                        "typeString": "function () view returns (address)"
                                                    }
                                                },
                                                "id": 29,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "381:12:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 30,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 24,
                                                "src": "395:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 27,
                                            "name": "_burn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 510,
                                            "src": "375:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 31,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "375:27:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 32,
                                    "nodeType": "ExpressionStatement",
                                    "src": "375:27:0"
                                }
                            ]
                        },
                        "functionSelector": "42966c68",
                        "id": 34,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "burn",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 25,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 24,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "342:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 23,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "342:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "341:16:0"
                        },
                        "returnParameters": {
                            "id": 26,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "365:0:0"
                        },
                        "scope": 35,
                        "src": "328:81:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 36,
                "src": "188:223:0"
            }
        ],
        "src": "32:379:0"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "568600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "22619",
            "balanceOf(address)": "infinite",
            "burn(uint256)": "infinite",
            "decimals()": "329",
            "decreaseAllowance(address,uint256)": "23711",
            "increaseAllowance(address,uint256)": "23784",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "1073",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}